trigger:
- main

pool:
  #vmImage: 'ubuntu-latest'
  name: 'Mac-Ubuntu2204'

steps:
# Reference the template for installing dependencies
# - template: templates/install_dependencies.yml

# Step to create the artifact
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: 'parameters.yml'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
    publishLocation: 'Container'

# Step to download the artifact
- task: DownloadPipelineArtifact@2
  inputs:
    artifactName: 'drop'
    targetPath: '$(Pipeline.Workspace)/drop'
  displayName: 'Download Pipeline Artifacts'

# Step to convert YAML to JSON
- script: |
    echo "Contents of parameters.yml:"
    cat $(Pipeline.Workspace)/drop/parameters.yml
    
    echo "Converting YAML to JSON..."
    python -c "import yaml; f = open('$(Pipeline.Workspace)/drop/parameters.yml'); params = yaml.safe_load(f); f.close(); import json; print(json.dumps(params))" > $(Pipeline.Workspace)/drop/params.json
    
    echo "Contents of params.json:"
    cat $(Pipeline.Workspace)/drop/params.json
  displayName: 'Convert YAML to JSON'

# Step to run the Ansible playbook
- task: AzureCLI@2
  inputs:
    azureSubscription: 'srgovin29_subscription(7e9464cb-6d69-4edc-8ee0-613d543b56d0)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Contents of params.json:"
      cat $(Pipeline.Workspace)/drop/params.json

      RESOURCE_GROUP=$(jq -r '.rg_name' $(Pipeline.Workspace)/drop/params.json)
      LOCATION=$(jq -r '.location' $(Pipeline.Workspace)/drop/params.json)

      echo "Your RESOURCE_GROUP: $RESOURCE_GROUP"
      echo "Your LOCATION: $LOCATION"

      # Verify the Ansible version being used
      ansible --version

      # Run the Ansible playbook with specified Python interpreter
      # ansible-playbook -i localhost, main.yml -vvv -e "rg_name=$RESOURCE_GROUP location=$LOCATION" -e 'ansible_python_interpreter=/opt/hostedtoolcache/Python/3.10.12/x64/bin/python3'
      ansible-playbook -i localhost, main.yml -vvv -e "rg_name=$RESOURCE_GROUP location=$LOCATION" 
  displayName: 'Run Ansible Playbook'