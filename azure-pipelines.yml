trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
# Use a specific version of Python (3.10.12)
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.10.12'
    addToPath: true

# Install system dependencies and pip
- script: |
    sudo apt-get update
    sudo apt-get -y install cmake make gcc g++ libssl-dev python3-dev python3-pip
    python3 -m pip install --upgrade pip
    pip3 --version
  displayName: 'Install system dependencies and pip'

# Install pip, PyYAML, and other required libraries
- script: |
    pip install pyyaml packaging
  displayName: 'Install pip, PyYAML, and packaging'

# Install Ansible and the Azure collection dependencies
- script: |
    pip3 install ansible==8.7.0
    ansible-galaxy collection install azure.azcollection
    pip3 install packaging requests[security] xmltodict msgraph-sdk==1.0.0 azure-cli-core==2.34.0 azure-common==1.1.11 azure-identity==1.14.0 azure-mgmt-authorization==2.0.0 azure-mgmt-apimanagement==3.0.0 azure-mgmt-batch==16.2.0 azure-mgmt-cdn==11.0.0 azure-mgmt-compute==30.6.0 azure-mgmt-containerinstance==9.0.0 azure-mgmt-core==1.4.0 azure-mgmt-containerregistry==9.1.0 azure-containerregistry==1.1.0 azure-mgmt-containerservice==20.0.0 azure-mgmt-datafactory==2.0.0 azure-mgmt-dns==8.0.0 azure-mgmt-marketplaceordering==1.1.0 azure-mgmt-monitor==3.0.0 azure-mgmt-managedservices==6.0.0 azure-mgmt-managementgroups==1.0.0 azure-mgmt-network==19.1.0 azure-mgmt-nspkg==2.0.0 azure-mgmt-privatedns==1.0.0 azure-mgmt-redis==13.0.0 azure-mgmt-resource==21.1.0 azure-mgmt-rdbms==10.2.0b12 azure-mgmt-search==8.0.0 azure-mgmt-servicebus==7.1.0 azure-mgmt-sql==3.0.1 azure-mgmt-storage==19.0.0 azure-mgmt-trafficmanager==1.0.0b1 azure-mgmt-web==6.1.0 azure-nspkg==2.0.0 azure-storage-blob==12.11.0 azure-core==1.28.0 azure-keyvault==4.2.0 azure-mgmt-keyvault==10.0.0 azure-mgmt-cosmosdb==6.4.0 azure-mgmt-hdinsight==9.0.0 azure-mgmt-devtestlabs==9.0.0 azure-mgmt-loganalytics==12.0.0 azure-mgmt-automation==1.0.0 azure-mgmt-iothub==2.2.0 azure-iot-hub==2.6.1 azure-mgmt-recoveryservices==2.0.0 azure-mgmt-recoveryservicesbackup==3.0.0 azure-mgmt-notificationhubs==7.0.0 azure-mgmt-eventhub==10.1.0
    ansible-galaxy collection install azure.azcollection --force
    # List the installed Ansible version
    ansible --version
  displayName: 'Install Ansible Azure Collection and dependencies'

# Step to create the artifact
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: 'parameters.yml'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
    publishLocation: 'Container'

# Step to download the artifact
- task: DownloadPipelineArtifact@2
  inputs:
    artifactName: 'drop'
    targetPath: '$(Pipeline.Workspace)/drop'
  displayName: 'Download Pipeline Artifacts'

# Step to convert YAML to JSON
- script: |
    cat $(Pipeline.Workspace)/drop/parameters.yml
    python -c "import yaml; f = open('$(Pipeline.Workspace)/drop/parameters.yml'); params = yaml.safe_load(f); f.close(); import json; print(json.dumps(params))" > params.json
    cat params.json
  displayName: 'Convert YAML to JSON'

# Step to run the Ansible playbook
- task: AzureCLI@2
  inputs:
    azureSubscription: 'srgovin29_subscription(7e9464cb-6d69-4edc-8ee0-613d543b56d0)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      RESOURCE_GROUP=$(jq -r '.rg_name' params.json)
      LOCATION=$(jq -r '.location' params.json)

      echo "RESOURCE_GROUP: $RESOURCE_GROUP"
      echo "LOCATION: $LOCATION"

      ansible-playbook -i localhost, main.yml -vvv -e "rg_name=$RESOURCE_GROUP location=$LOCATION"
  displayName: 'Run Ansible Playbook'
